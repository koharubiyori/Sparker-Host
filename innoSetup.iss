; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Sparker"
#define MyAppVersion "0.9.0"
#define MyAppPublisher "koharubiyori"
#define MyAppExeName "sparker.exe"
#define CredentialProviderGuid "FC554755-47EF-46A1-8B77-D133127E14F1"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{1AAEF4B3-CC12-4839-9B41-6BA6E8D909D9}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={autopf}\{#MyAppName}
UninstallDisplayIcon={app}\{#MyAppExeName}
; "ArchitecturesAllowed=x64compatible" specifies that Setup cannot run
; on anything but x64 and Windows 11 on Arm.
ArchitecturesAllowed=x64compatible
; "ArchitecturesInstallIn64BitMode=x64compatible" requests that the
; install be done in "64-bit mode" on x64 or Windows 11 on Arm,
; meaning it should use the native 64-bit Program Files directory and
; the 64-bit view of the registry.
ArchitecturesInstallIn64BitMode=x64compatible
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only).
PrivilegesRequired=admin
OutputDir=innoOut
OutputBaseFilename=SparkerInstaller_{#MyAppVersion}
SetupIconFile=innoRes\app.ico
SolidCompression=yes
WizardStyle=modern

  
[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

; [Tasks]
; Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "CredProvider\bin\Release\SparkerCredProvider.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "SystemService\bin\publish\Sparker.SystemService.exe"; DestDir: "{app}"; Flags: ignoreversion 
Source: "UserService\bin\publish\Sparker.UserService.exe"; DestDir: "{app}"; Flags: ignoreversion 
Source: "Server\dist\Sparker.Server.exe"; DestDir: "{app}"; Flags: ignoreversion 
Source: "innoRes\*"; DestDir: "{app}"; Flags: ignoreversion 
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKLM; Subkey: "SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\Credential Providers\{{{#CredentialProviderGuid}}}"; ValueType: string; ValueName: ""; ValueData: "Sparker Credential Provider"; Flags: uninsdeletekey

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"

[Run]
; Register the Credential Provider
Filename: "{app}\regasm.exe"; Parameters: """{app}\SparkerCredProvider.dll"" /codebase"; Flags: runhidden waituntilterminated

; Register the windows system service
Filename: "sc.exe"; Parameters: "stop ""{#MyAppName}"""; Flags: runhidden waituntilterminated
Filename: "sc.exe"; Parameters: "delete ""{#MyAppName}"""; Flags: runhidden waituntilterminated
Filename: "sc.exe"; Parameters: "create ""{#MyAppName}"" start= auto binpath= ""{app}\Sparker.SystemService.exe"""; Flags: runhidden waituntilterminated
Filename: "sc.exe"; Parameters: "description ""{#MyAppName}"" ""Host server of Sparker for the mobile app."""; Flags: runhidden waituntilterminated
Filename: "sc.exe"; Parameters: "failure ""{#MyAppName}"" reset= 0 actions= restart/5000"; Flags: runhidden waituntilterminated
Filename: "sc.exe"; Parameters: "config ""{#MyAppName}"" start= auto"; Flags: runhidden waituntilterminated
Filename: "sc.exe"; Parameters: "start ""{#MyAppName}"""; Flags: runhidden waituntilterminated

[UninstallRun]
Filename: "sc.exe"; Parameters: "stop ""{#MyAppName}"""; Flags: runhidden waituntilterminated
Filename: "sc.exe"; Parameters: "delete ""{#MyAppName}"""; Flags: runhidden waituntilterminated

[UninstallDelete]
Type: filesandordirs; Name: "{app}"

[Code]
function PrepareToInstall(var NeedsRestart: Boolean): String;
var
  ResultCode: Integer;
begin
  Exec('sc.exe', 'stop ' + '{#MyAppName}', '', SW_HIDE, ewWaitUntilTerminated, ResultCode)
  Result := '';
end;